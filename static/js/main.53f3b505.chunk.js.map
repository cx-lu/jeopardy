{"version":3,"sources":["components/SearchBar.js","components/results.js","App.js","serviceWorker.js","index.js"],"names":["SearchPage","props","state","collapsed","difficulty","startDate","Date","endDate","category","changeCategory","event","setState","target","value","changeParentCategory","changeDifficulty","changeParentDifficulty","changeStartDate","date","parent","toISOString","changeEndDate","handleSubmit","componentDidMount","require","md","color","className","dark","expand","isOpen","this","navbar","right","style","marginRight","onChange","backgroundColor","fontSize","border","selected","outline","size","onClick","Component","Results","results","map","result","width","margin","float","height","textAlign","overflow","question","answer","airdate","toDateString","App","bind","fetch","then","res","json","data","catch","console","log","newCategory","newDifficulty","newDate","SearchBar","changeParentStartDate","changeParentEndDate","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.53f3b505.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport {\n  MDBCol,\n  MDBFormInline,\n  MDBBtn,\n  MDBNavbarBrand,\n  MDBNavbarToggler,\n  MDBNavbar,\n  MDBCollapse,\n  MDBNavbarNav\n} from \"mdbreact\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nclass SearchPage extends Component {\n  state = {\n    collapsed: false,\n    difficulty: \"\",\n    startDate: new Date(),\n    endDate: new Date(),\n    category: \"\"\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  changeCategory = (event) => {\n    this.setState({\n      category: event.target.value\n    }, () =>\n    {this.props.changeParentCategory(this.state.category)});\n  };\n\n  changeDifficulty = (event) => {\n    this.setState({\n      difficulty: event.target.value\n    }, () =>\n    {this.props.changeParentDifficulty(this.state.difficulty)});\n  };\n\n  changeStartDate = date => {\n    this.setState({\n      startDate: date\n    }, () =>\n    {if (typeof this.startDate !== 'undefined') {\n      this.props.parent.changeStartDate(this.startDate.toISOString())\n    }}\n    );\n  };\n\n  changeEndDate = date => {\n    this.setState({\n      endDate: date\n    }, () =>\n    {if (typeof this.endDate !== 'undefined') {\n      this.props.parent.changeEndDate(this.endDate.toISOString())\n    }}\n    );\n  };\n\n  handleSubmit = (event) => {\n    this.props.parent.componentDidMount();\n  }\n\n  render() {\n    var dateFormat = require('dateformat');\n    return (\n      <div>\n        <MDBCol md=\"14\">\n          <MDBNavbar\n            color=\"blue accent-4\"\n            className=\"text-white darken-3\"\n            dark\n            expand=\"md\"\n          >\n            <MDBNavbarBrand>Jeopardy<b>Search</b></MDBNavbarBrand>\n            <Router>\n              <MDBCollapse isOpen={this.state.collapsed} navbar>\n                <MDBNavbarNav right>\n                  <MDBFormInline className=\"md-form mr-auto m-0\">\n                    <div style={{marginRight: '20px'}}>\n                      <select\n                        className=\"browser-default custom-select\"\n                        onChange={this.changeDifficulty} value={this.state.value}\n                        style={{\n                          color: \"white\",\n                          backgroundColor: \"#E5144F\",\n                          fontSize: \"14px\",\n                          border: \"none\"\n                        }}\n                      >\n                        <option>Difficulty</option>\n                        <option value=\"100\">100</option>\n                        <option value=\"200\">200</option>\n                        <option value=\"300\">300</option>\n                        <option value=\"400\">400</option>\n                        <option value=\"500\">500</option>\n                        <option value=\"600\">600</option>\n                        <option value=\"700\">700</option>\n                        <option value=\"800\">800</option>\n                        <option value=\"900\">900</option>\n                        <option value=\"1000\">1000</option>\n                      </select>\n                    </div>\n\n                    <div style={{marginRight: '20px'}}>\n                      <select\n                        className=\"browser-default custom-select\"\n                        onChange={this.changeCategory} value={this.state.value}\n                        style={{\n                          color: \"white\",\n                          backgroundColor: \"#BA1354\",\n                          fontSize: \"14px\",\n                          border: \"none\"\n                        }}\n                      >\n                        <option>Popular Categories</option>\n                        <option value=\"306\">Potpourriiii</option>\n                        <option value=\"21\">Animals</option>\n                        <option value=\"42\">Sports</option>\n                        <option value=\"25\">Science</option>\n                        <option value=\"442\">People</option>\n                        <option value=\"67\">Television</option>\n                        <option value=\"114\">History</option>\n                        <option value=\"49\">Food</option>\n                        <option value=\"267\">Nature</option>\n                        <option value=\"357\">Organizations</option>\n                      </select>\n                    </div>\n                    Start Date\n                    <div>\n                      <DatePicker\n                        selected={this.state.startDate}\n                        onChange={this.changeStartDate}\n                      />\n                    </div>\n\n                    End Date\n                    <div>\n                      <DatePicker\n                        selected={this.state.endDate}\n                        onChange={this.changeEndDate}\n                      />\n                    </div>\n                    \n                    <MDBBtn\n                      outline\n                      color=\"white\"\n                      size=\"sm\"\n                      className=\"mr-auto\"\n                      onClick={this.handleSubmit}\n                    >\n                      Search\n                    </MDBBtn>\n                  </MDBFormInline>\n                </MDBNavbarNav>\n              </MDBCollapse>\n            </Router>\n          </MDBNavbar>\n        </MDBCol>\n      </div>\n    );\n  }\n}\n\nexport default SearchPage;\n","import React from \"react\";\n\nconst Results = ({ results }) => {\n  return (\n    <div>\n      <center>\n        <br></br>\n        <h6>Search Results</h6>\n      </center>\n      {results.map(result => (\n        <div\n          className=\"card\"\n          style={{\n            width: \"20%\",\n            margin: \"15px 2.5%\",\n            float: \"left\",\n            height: \"225px\",\n            backgroundColor: \"#7e57c2\",\n            color: \"white\"\n          }}\n        >\n          <p\n            className=\"card-text\"\n            style={{ textAlign: \"center\", margin: \"10px\", fontSize: \"12px\" }}\n          >\n            {result.value === null ? \"Value unknown\" : \"$\" + result.value}\n          </p>\n          <div\n            className=\"card-body\"\n            style={{ overflow: \"scroll\", backgroundColor: \"white\" }}\n          >\n            <h6 className=\"card-title\" style={{ color: \"black\" }}>\n              <b>Question:</b> {result.question}\n            </h6>\n            <p className=\"card-subtitle mb-2 text-muted\">\n              <b>Answer:</b> {result.answer}\n            </p>\n          </div>\n          <p\n            className=\"card-text\"\n            style={{ textAlign: \"center\", margin: \"10px\", fontSize: \"12px\" }}\n          >\n            {new Date(result.airdate).toDateString()}\n          </p>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Results;\n","import React, { Component } from \"react\";\nimport SearchBar from \"./components/SearchBar\";\nimport Results from \"./components/results\";\n\nclass App extends Component {\n  state = {\n    difficulty: \"\",\n    category: \"\",\n    startDate: \"\",\n    endDate: \"\",\n    results: []\n  };\n\n  constructor(props) {\n    super(props);\n    this.changeDifficulty = this.changeDifficulty.bind(this);\n    this.changeCategory = this.changeCategory.bind(this);\n    this.changeStartDate = this.changeStartDate.bind(this);\n    this.changeEndDate = this.changeEndDate.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(\n      \"http://jservice.io/api/clues?value=\" +\n        this.state.difficulty +\n        \"&category=\" +\n        this.state.category +\n        \"&min_date=\" +\n        this.state.startDate +\n        \"&max_date=\" +\n        this.state.endDate\n    )\n      .then(res => res.json())\n      .then(data => {\n        this.setState({ results: data });\n      })\n      .catch(console.log);\n    console.log(\n      \"http://jservice.io/api/clues?value=\" +\n        this.state.difficulty +\n        \"&category=\" +\n        this.state.category +\n        \"&min_date=\" +\n        this.state.startDate +\n        \"&max_date=\" +\n        this.state.endDate\n    );\n  }\n\n  changeCategory(newCategory) {\n    this.setState({\n      category: newCategory\n    });\n  }\n\n  changeDifficulty(newDifficulty) {\n    console.log(newDifficulty);\n    this.setState({\n      difficulty: newDifficulty\n    });\n  }\n\n  changeStartDate(newDate) {\n    this.setState({\n      startDate: newDate\n    });\n  }\n\n  changeEndDate(newDate) {\n    this.setState({\n      endDate: newDate\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <SearchBar\n          changeParentDifficulty={this.changeDifficulty}\n          changeParentCategory={this.changeCategory}\n          changeParentStartDate={this.changeStartDate}\n          changeParentEndDate={this.changeEndDate}\n          parent={this}\n        />\n        <Results results={this.state.results} />\n\n        <div style={{ textAlign: \"center\", margin: \"50px\" }}>\n          <p>Search by difficulty, date, or category for clues!</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}